import pefile
import os
import csv

fileDir = os.path.dirname(os.path.realpath('__file__'))
path = os.path.join(fileDir, 'path_of_your_dataset')

def header_ex(base_path,label):
    result = []
    base_path = base_path+ "/"
    file_list = os.listdir(base_path)

    """ Reading PE files """
    for file in file_list:
        try:
            pe = pefile.PE(base_path + file)
        except pefile.PEFormatError:
            print(pefile.PEFormatError)
            pass
            continue

        """ Feature extraction """
        header = pe.header
        header = header[:1024]

        Bytes = []
        for byte in header:
            Bytes.append(byte)

        # check if the length of header is less than 1024 then pad 0
        if len(Bytes) < 1024:
            for i in range(1024-len(Bytes)):
                Bytes.append(0)

        # if length of header is more than 1024 bytes just keep the first 1024 bytes
        elif len(Bytes) > 1024:
            Bytes = Bytes[0:1024]

        Bytes += [label]

        # Extracting DOS_Header,File_Header and Optional_Header
        sub_header = []

        # DOS_Header is the first 64 Bytes of the file
        sub_header += Bytes[0:64]

        # File_Header
        FileHeader_Offset = pe.DOS_HEADER.e_lfanew + pe.NT_HEADERS.sizeof()

        sub_header += Bytes[FileHeader_Offset:FileHeader_Offset + pe.FILE_HEADER.sizeof()]

        # Optional_Header
        OptionalHeader_Offset = FileHeader_Offset + pe.FILE_HEADER.sizeof()
        sub_header += Bytes[OptionalHeader_Offset:OptionalHeader_Offset+224]
        sub_header += [label]

        if len(sub_header)==309:
            result.append(sub_header)

    with open('extracted_header.csv', 'w') as csvFile:
        writer = csv.writer(csvFile)
        writer.writerows(result)
    csvFile.close()

    return result

